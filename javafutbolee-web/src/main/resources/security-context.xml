<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
    xmlns:sec="http://www.springframework.org/schema/security"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:beans="http://www.springframework.org/schema/beans"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
    http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.0.xsd">    
    
    
    <!-- Enable method level Spring Security by annotations  -->
    <sec:global-method-security pre-post-annotations="enabled" />  
    <sec:http auto-config="true" use-expressions="true">        
        
        <sec:intercept-url pattern="/faces/views/s/rrpp/**" access="hasAuthority('ROLE_RRPP')"/>
        
        <sec:intercept-url pattern="/faces/views/s/adminFuncionarios/editarFuncionario.xhtml"  access="hasAnyAuthority('ROLE_ADMIN','ROLE_RRPP','ROLE_ADMIN_SOCIO')"/> 
        <sec:intercept-url pattern="/faces/views/s/adminFuncionarios/**" access="hasAuthority('ROLE_ADMIN')"/>  
        
        
        <sec:intercept-url pattern="/faces/views/s/adminSocios/registrarSocio.xhtml" access="permitAll"/>        
        <sec:intercept-url pattern="/faces/views/s/adminSocios/**" access="hasAuthority('ROLE_ADMIN_SOCIO')" />        

        
        <!-- Page level Spring Security : Intercept access to resources in /pages/secure/** -->
        <sec:intercept-url pattern="/faces/views/s/**" access="isAuthenticated()" />

        <!-- Page level Spring Security : Permit access to resources in /pages/unsecure/** -->
        <sec:intercept-url pattern="/faces/views/p/**" access="permitAll"/>

       
 
        <!-- Page level Spring Security : Enable Primefaces -->
        <sec:intercept-url pattern="/javax.faces.resource/**" access="permitAll"/>
  
     
  
        <!-- Define login page for Spring Security -->      
        <sec:form-login login-page="/faces/views/p/login.xhtml" default-target-url="/faces/views/p/home.xhtml"/>
        

        <!-- Define logout properties for Spring Security -->
        <sec:logout invalidate-session="true" delete-cookies="true" logout-success-url="/"></sec:logout>
    </sec:http>
   
    <!-- Set customUserDetailsService class as the authentication Manager for Spring Security-->
    <sec:authentication-manager alias="authenticationManager">
        <sec:authentication-provider user-service-ref="customUserDetailsService">
            <sec:password-encoder ref="encoder"/>
        </sec:authentication-provider>
        
        <sec:authentication-provider >
            <sec:user-service properties="classpath:enlil_users.properties">                
            </sec:user-service>
        </sec:authentication-provider>
    </sec:authentication-manager>
                
    <!-- For hashing and salting user passwords -->
    <beans:bean id="encoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>

    
    
    <!-- Inject authentication Manager to our LoginBean -->
    <beans:bean id="loginBean" name="loginBean" class="io.dacopancm.jfee.managedController.LoginBean" scope="prototype">
        <beans:property name="authenticationManager" ref="authenticationManager"></beans:property>
    </beans:bean>
    
    
</beans:beans>